C51 COMPILER V9.00   XB_2WD                                                                05/30/2018 17:15:18 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE XB_2WD
OBJECT MODULE PLACED IN XB-2WD.OBJ
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE XB-2WD.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************XB-2WD 智能小车参考程序********************
   2          *  平台：XB-2WD + Keil4 + STC89C52
   3          *  名称：小车寻黑线
   4          *  淘宝：http://xbmcu.taobao.com       
   5          *  日期：2014-5-18
   6          *   QQ : 61924336
   7          *  晶振:11.0592MHZ
   8          ******************************************************************/
   9          
  10          /******************************************************************
  11          **                        头文件
  12          ******************************************************************/
  13          #include<AT89X52.H>       
  14          
  15          /******************************************************************
  16          **                       接线定义
  17          ******************************************************************/
  18          #define Left_moto_go      {P1_2=1,P1_3=0;}    //左电机正转
  19          #define Left_moto_back    {P1_2=0,P1_3=1;}       //左电机反转
  20          #define Left_moto_Stop    {P1_0=0;}                  //左电机停转                     
  21          #define Right_moto_go     {P1_4=1,P1_5=0;}       //右电机正转
  22          #define Right_moto_back   {P1_4=0,P1_5=1;}       //右电机反转
  23          #define Right_moto_Stop   {P1_1=0;}                      //右电机停转 
  24          
  25          #define Left_moto_pwm     P1_0   //PWM信号端
  26          #define Right_moto_pwm    P1_1    //PWM信号端
  27          #define Left_1_led        P3_4   // 左传感器       
  28          #define Right_1_led       P3_5   //右传感器 
  29          
  30          sbit BUZZ = P3^6;                                    //蜂鸣器引脚
  31          
  32          /******************************************************************
  33          **                       PWM调速相关变量
  34          ******************************************************************/
  35          unsigned char pwm_val_left  =0;                     //变量定义
  36          unsigned char push_val_left =0;                      //左电机占空比N/20
  37          unsigned char pwm_val_right =0;
  38          unsigned char push_val_right=0;                      //右电机占空比N/20
  39          bit Right_moto_stop=1;
  40          bit Left_moto_stop =1;
  41          unsigned  int  time=0;
  42          
  43          /******************************************************************
  44          **                       延时函数
  45          ******************************************************************/     
  46          void delay(unsigned int k)
  47          {    
  48   1           unsigned int x,y;
  49   1               for(x=0;x<k;x++) 
  50   1                 for(y=0;y<2000;y++);
  51   1      }
  52          
  53          /******************************************************************
  54          **                       小车前进
  55          ******************************************************************/
C51 COMPILER V9.00   XB_2WD                                                                05/30/2018 17:15:18 PAGE 2   

  56          void  front_run(void)
  57          {
  58   1               push_val_left=5;
  59   1               push_val_right=5;
  60   1               Left_moto_go;   
  61   1               Right_moto_go;  
  62   1      }
  63          
  64          /******************************************************************
  65          **                       小车左转
  66          ******************************************************************/
  67          void  left_run(void)
  68          {
  69   1               push_val_left=5;
  70   1               push_val_right=5;
  71   1               Left_moto_Stop;   
  72   1               Right_moto_go;  
  73   1      }
  74          
  75          /******************************************************************
  76          **                       小车右转
  77          ******************************************************************/
  78          void  right_run(void)
  79          {
  80   1               push_val_left=5;
  81   1               push_val_right=5;
  82   1               Right_moto_Stop;   
  83   1               Left_moto_go;  
  84   1      }
  85          
  86          /******************************************************************
  87          **                       小车停走
  88          ******************************************************************/
  89          void  stop(void)
  90          {
  91   1               push_val_left=5;
  92   1               push_val_right=5;
  93   1               Left_moto_Stop
  94   1               Right_moto_Stop;    
  95   1      }
  96          
  97          /******************************************************************
  98          **                       左电机调速
  99          ******************************************************************/
 100          void pwm_out_left_moto(void)
 101          {  
 102   1              if(Left_moto_stop)
 103   1              {
 104   2                  if(pwm_val_left<=push_val_left)
 105   2                              {
 106   3                                      Left_moto_pwm=1; 
 107   3              
 108   3                              }
 109   2                      else 
 110   2                          {
 111   3                              Left_moto_pwm=0;
 112   3              
 113   3                              }
 114   2                      if(pwm_val_left>=20)
 115   2                          pwm_val_left=0;
 116   2              }
 117   1              else    
C51 COMPILER V9.00   XB_2WD                                                                05/30/2018 17:15:18 PAGE 3   

 118   1              {
 119   2                      Left_moto_pwm=0;
 120   2              }
 121   1      }
 122          
 123          /******************************************************************
 124          **                       右电机调速
 125          ******************************************************************/
 126          void pwm_out_right_moto(void)
 127          { 
 128   1              if(Right_moto_stop)
 129   1          { 
 130   2              if(pwm_val_right<=push_val_right)
 131   2                  {
 132   3                      Right_moto_pwm=1; 
 133   3                      }
 134   2              else 
 135   2                  {
 136   3                              Right_moto_pwm=0;
 137   3                      }
 138   2              if(pwm_val_right>=20)
 139   2                     pwm_val_right=0;
 140   2         }
 141   1         else    
 142   1         {
 143   2             Right_moto_pwm=0;
 144   2      
 145   2         }
 146   1      }
 147          
 148          /******************************************************************
 149          **                       定时器0初始化
 150          ******************************************************************/
 151          void timer0_Init(void)
 152          {
 153   1              TMOD=0X01;
 154   1              TH0= 0XFc;                //1ms定时
 155   1              TL0= 0X18;
 156   1              TR0= 1;
 157   1              ET0= 1;
 158   1              EA = 1;                    //开总中断   
 159   1      }
 160                     
 161          /******************************************************************
 162          **                   定时器0中断服务子程序
 163          ******************************************************************/
 164          void timer0()interrupt 1   using 2
 165          {
 166   1           TH0=0XFc;    
 167   1               TL0=0X18;
 168   1               time++;
 169   1               pwm_val_left++;
 170   1               pwm_val_right++;
 171   1               pwm_out_left_moto();
 172   1               pwm_out_right_moto();
 173   1       }      
 174          
 175          /******************************************************************
 176          **                       主函数
 177          ******************************************************************/
 178          void main(void)
 179          {
C51 COMPILER V9.00   XB_2WD                                                                05/30/2018 17:15:18 PAGE 4   

 180   1              unsigned char i;
 181   1              stop();             //小车停转      
 182   1      B:      for(i=0;i<50;i++)   //判断按键S4是否按下
 183   1              {
 184   2                      delay(1);            //1ms内判断50次，如果其中有一次被判断到K4没按下，便重新检测
 185   2                      if(P2_7!=0)      //当K4按下时，启动小车前进
 186   2                      goto B;          //跳转到标号B，重新检测  
 187   2              } 
 188   1              BUZZ=0;              //50次检测S5确认是按下之后，蜂鸣器发出“滴”声响，然后启动小车。
 189   1              delay(50);
 190   1              BUZZ=1;              //响50ms后关闭蜂鸣器
 191   1          timer0_Init();     
 192   1              while(1)
 193   1              {
 194   2                      if(Left_1_led==0&&Right_1_led==0)
 195   2                         front_run();   //调用前进函数
 196   2                      else
 197   2                  {                     
 198   3                              if(Left_1_led==1&&Right_1_led==0)           //左边检测到黑线
 199   3                              {
 200   4                                      left_run();               //调用小车左转  函数
 201   4                              }  
 202   3                              if(Right_1_led==1&&Left_1_led==0)               //右边检测到黑线
 203   3                          {     
 204   4                                      right_run();               //调用小车右转       函数
 205   4      
 206   4                          }
 207   3                      }        
 208   2              }
 209   1      }
 210          /******************************************************************
 211          **                        结束
 212          ******************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    257    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
